[{"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/index.js":"1","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/reportWebVitals.js":"2","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/App.js":"3","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Class.js":"4","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Error500.js":"5","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Navbar.js":"6","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/PolicyEditor.js":"7"},{"size":500,"mtime":1614927362722,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1614927362724,"results":"10","hashOfConfig":"9"},{"size":1947,"mtime":1614927362718,"results":"11","hashOfConfig":"9"},{"size":4559,"mtime":1614927362720,"results":"12","hashOfConfig":"9"},{"size":394,"mtime":1614927362720,"results":"13","hashOfConfig":"9"},{"size":1870,"mtime":1612852598525,"results":"14","hashOfConfig":"9"},{"size":665,"mtime":1614927362721,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q2o9dk",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/index.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/reportWebVitals.js",[],["33","34"],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/App.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Class.js",["35"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Card, Col, Divider, Form, Input, Modal, Row, Spin, Statistic, Tooltip } from \"antd\";\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport Error500 from './Error500';\n\nconst axios = require('axios');\n\nfunction Class() {\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [update, setUpdate] = useState('');\n  const [subject, setSubject] = useState('');\n  const [lecturer, setLecturer] = useState('');\n  const [section, setSection] = useState('');\n  const [awsTag, setAWSTag] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getSubject();\n  }, [update])\n\n  const getSubject = async () => {\n    try {\n      const response = await axios.get('http://localhost:9000/api/subject');\n      setData(response.data);\n      setIsError(false);\n      console.log(response.data);\n      setLoading(true);\n\n    } catch (error) {\n      console.error(error);\n      setIsError(true);\n    }\n  }\n\n  const addSubject = async () => {\n\n    axios.post('http://localhost:9000/api/subject', {\n      'subject': subject,\n      'lecturer': lecturer,\n      'section': section,\n      'awsTag': awsTag\n    })\n\n      .then(function (response) {\n        console.log(response)\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n\n    setIsModalVisible(false);\n    setUpdate('add');\n  }\n\n  const deleteSubject = (id) => {\n    console.log('click')\n    console.log(id)\n    axios.post('http://localhost:9000/api/delete', {\n      'id': id\n    })\n      .then(function (response) {\n        console.log(response)\n      })\n      .catch(function (error) {\n        console.log(error)\n      });\n\n    setUpdate('delete');\n  }\n\n  const renderSubject = () => {\n\n    return data.map(data => {\n      return (\n        <Col span={12} justify='center'>\n          <Card title={data.subject} extra={<a>Enter</a>} style={{ width: 500 }} actions={[<DeleteOutlined onClick={() => deleteSubject(data._id)} />,]}>\n            <Row gutter={[16, 16]}>\n              <Col span={6}>\n                <Statistic title=\"Section\" value={data.section} />\n              </Col>\n              <Col span={6}>\n                <Statistic title=\"Lecturer\" value={data.lecturer} />\n              </Col>\n            </Row>\n            <Row gutter={[16, 16]}>\n              <Col span={8}>\n                <Button>\n                  Stop All EC2\n                  </Button>\n              </Col>\n              <Col span={8}>\n                <Button danger>\n                  Terminate All EC2\n                  </Button>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      )\n    })\n  };\n\n  const renderError = () => {\n    if (isError === true) {\n      return (\n        <Error500 />\n      )\n    }\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false)\n  };\n\n  const onFinish = () => {\n    addSubject()\n  };\n\n  return (\n    <div>\n      <Button type='primary' icon={<PlusOutlined />} key='delete' onClick={showModal}>\n        Add Class\n      </Button>\n      <Modal title=\"Add Class\" visible={isModalVisible} okType='primary' okText='Add' onOk={addSubject} onCancel={handleCancel}>\n        <Form onFinish={onFinish}>\n          <Form.Item label='Subject'>\n            <Input type='text' value={subject} name='subject' onChange={(event) => setSubject(event.target.value)} autoComplete='off' />\n          </Form.Item>\n          <Form.Item label='Lecturer'>\n            <Input type='text' value={lecturer} name='lecturer' onChange={(event) => setLecturer(event.target.value)} autoComplete='off' />\n          </Form.Item>\n          <Form.Item label='Section'>\n            <Input type='text' value={section} name='section' onChange={(event) => setSection(event.target.value)} autoComplete='off' />\n          </Form.Item>\n          <Form.Item label='AWS Resource Tag'>\n            <Tooltip title='Please Enter AWS Resource Tag Exactly Match on AWS' color='yellow' placement='bottomLeft'>\n              <Input type='text' value={awsTag} name='awsTag' onChange={(event) => setAWSTag(event.target.value)} autoComplete='off' />\n            </Tooltip>\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Divider />\n      <Row gutter={[16, 16]}>\n        {loading ? (renderSubject()) : (<Spin size=\"large\" />)}\n      </Row>\n      {renderError()}\n    </div>\n  );\n}\n\nexport default Class;\n","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Error500.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Navbar.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/PolicyEditor.js",["36","37","38"],"import React, { useState } from 'react';\nimport { Checkbox, Layout } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\n\nfunction PolicyEditor() {\n\n    const { Header, Content, Footer } = Layout;\n\n    function onChange(e) {\n        console.log(`checked = ${e.target.checked}`);\n      }\n    \n    return (\n        <Layout className='layout'>\n            <Content>\n                <div>\n                    <Checkbox onChange={onChange}>Checkbox</Checkbox>\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n        </Layout>\n    )\n}\nexport default PolicyEditor;\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":79,"column":45,"nodeType":"45","endLine":79,"endColumn":48},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":17},{"ruleId":"46","severity":1,"message":"51","line":7,"column":13,"nodeType":"48","messageId":"49","endLine":7,"endColumn":19},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Content' is defined but never used.","'Header' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]