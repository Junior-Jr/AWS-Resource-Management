[{"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/index.js":"1","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/reportWebVitals.js":"2","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/App.js":"3","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Class.js":"4","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Error500.js":"5","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Navbar.js":"6","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Exam.js":"7","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/ClassDetail.js":"8","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/CostDashboard.js":"9","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/Project.js":"10","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/CostControl.js":"11","/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/ProjectDetail.js":"12"},{"size":500,"mtime":1614927362722,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1614927362724,"results":"15","hashOfConfig":"14"},{"size":1771,"mtime":1621231525972,"results":"16","hashOfConfig":"14"},{"size":5419,"mtime":1621528789443,"results":"17","hashOfConfig":"14"},{"size":383,"mtime":1615198661957,"results":"18","hashOfConfig":"14"},{"size":1471,"mtime":1621578153229,"results":"19","hashOfConfig":"14"},{"size":6341,"mtime":1617065778612,"results":"20","hashOfConfig":"14"},{"size":4954,"mtime":1621579756024,"results":"21","hashOfConfig":"14"},{"size":5385,"mtime":1621581758597,"results":"22","hashOfConfig":"14"},{"size":5673,"mtime":1620799262361,"results":"23","hashOfConfig":"14"},{"size":3779,"mtime":1621355605583,"results":"24","hashOfConfig":"14"},{"size":4253,"mtime":1621355652941,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"q2o9dk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/index.js",[],["54","55"],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/reportWebVitals.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/App.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Class.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Error500.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Navbar.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/components/Exam.js",["56"],"import { useState, useEffect } from \"react\";\nimport { Button, Card, Col, Form, Input, message, Modal, PageHeader, Popconfirm, Row, Spin, Statistic, Tooltip } from \"antd\";\nimport { DeleteOutlined, ExclamationCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport Error500 from './Error500';\n\nconst axios = require('axios');\n\nfunction Exam() {\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [update, setUpdate] = useState('');\n    const [examName, setExamName] = useState('');\n    const [lecturer, setLecturer] = useState('');\n    const [section, setSection] = useState('');\n    const [awsTag, setAWSTag] = useState('');\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        getExam();\n    }, [update])\n\n    const getExam = async () => {\n        try {\n            const response = await axios.get('http://localhost:9000/api/exam');\n            setData(response.data);\n            setIsError(false);\n            console.log(response.data);\n            setLoading(true);\n\n        } catch (error) {\n            console.error(error);\n            setIsError(true);\n        }\n    }\n\n    const addExam = async () => {\n        try {\n            message.success(`${examName} created successfully`, 2.75)\n            const response = await axios.post('http://localhost:9000/api/exam', {\n                'exam_name': examName,\n                'lecturer': lecturer,\n                'section': section,\n                'awsTag': awsTag\n            })\n            setUpdate('add');\n            console.log(response)\n\n        } catch (error) {\n            console.log(error)\n        };\n\n        setIsModalVisible(false);\n    }\n\n    const deleteExam = async (id, exam_name) => {\n        try {\n            message.success(`${exam_name} deleted`, 2.75)\n            const response = await axios.post('http://localhost:9000/api/exam/delete', {\n                'id': id\n            })\n            setUpdate('delete');\n            console.log(response)\n\n        } catch (error) {\n            console.log(error)\n        };\n    }\n\n    const renderExam = () => {\n\n        return data.map(data => {\n            return (\n                <Col span={12} justify='center'>\n                    <Card\n                        title={data.exam_name}\n                        extra={<a>Enter</a>}\n                        style={{ width: 500 }}\n                        actions={[\n                            <Popconfirm\n                                title='Are you sure to delete this exam?'\n                                icon={<ExclamationCircleOutlined style={{ color: 'red' }} />}\n                                okText='Delete'\n                                onConfirm={() => (deleteExam(data._id, data.exam_name))}\n                            >\n                                <DeleteOutlined />\n                            </Popconfirm>\n                            ,]}>\n                        <Row gutter={[16, 16]}>\n                            <Col span={6}>\n                                <Statistic title=\"Section\" value={data.section} />\n                            </Col>\n                            <Col span={6}>\n                                <Statistic title=\"Lecturer\" value={data.lecturer} />\n                            </Col>\n                            <Col span={6}>\n                                <Statistic title=\"End Time\" value='10:08' />\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 16]}>\n                            <Col span={8}>\n                                <Button>\n                                    Stop All EC2\n                  </Button>\n                            </Col>\n                            <Col span={8}>\n                                <Button danger>\n                                    Terminate All EC2\n                  </Button>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            )\n        })\n    };\n\n    const renderError = () => {\n        if (isError === true) {\n            return (\n                <Error500 />\n            )\n        }\n    };\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false)\n    };\n\n    const onFinish = () => {\n        addExam()\n    };\n\n    return (\n        <div>\n            <PageHeader className='page-header' extra={[\n                <Button type=\"primary\" icon={<PlusOutlined />} key='delete' onClick={showModal}>\n                    Add Exam\n        </Button>,\n            ]}>\n            </PageHeader>\n            <Modal title=\"Add Exam\" visible={isModalVisible} okType='primary' okText='Add' onOk={addExam} onCancel={handleCancel}>\n                <Form onFinish={onFinish}>\n                    <Form.Item label='Exam Name'>\n                        <Input type='text' value={examName} name='exam' onChange={(event) => setExamName(event.target.value)} autoComplete='off' />\n                    </Form.Item>\n                    <Form.Item label='Lecturer'>\n                        <Input type='text' value={lecturer} name='lecturer' onChange={(event) => setLecturer(event.target.value)} autoComplete='off' />\n                    </Form.Item>\n                    <Form.Item label='Section'>\n                        <Input type='text' value={section} name='section' onChange={(event) => setSection(event.target.value)} autoComplete='off' />\n                    </Form.Item>\n                    <Form.Item label='AWS Resource Tag'>\n                        <Tooltip title='Please Enter AWS Resource Tag Exactly Match on AWS' color='yellow' placement='bottomLeft'>\n                            <Input type='text' value={awsTag} name='awsTag' onChange={(event) => setAWSTag(event.target.value)} autoComplete='off' />\n                        </Tooltip>\n                    </Form.Item>\n                </Form>\n            </Modal>\n            <Row className='Card-row' style={{ marginLeft: '7vw' }} gutter={[16, 16]}>\n                {loading ? (renderExam()) : (<Spin size=\"large\" style={{ marginLeft: '50%' }} />)}\n            </Row>\n            {renderError()}\n        </div>\n    );\n}\n\nexport default Exam;",["57","58"],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/ClassDetail.js",["59","60"],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/CostDashboard.js",["61","62","63"],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/Project.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/CostControl.js",[],"/Users/junior/Documents/GitHub/AWS-Resource-Management/react-aws-rms/src/views/ProjectDetail.js",["64"],"import { useParams } from \"react-router-dom\"\nimport { Button, Card, Input, PageHeader, Tabs, Tag, Table, Tooltip } from 'antd'\nimport { useState, useEffect } from 'react'\nimport Error500 from '../components/Error500'\n\nconst axios = require('axios')\n\nfunction ProjectDetail() {\n\n    const { aws_tag_value } = useParams()\n    const [ec2, setEC2] = useState([])\n    const [s3, setS3] = useState([])\n    const [isError, setIsError] = useState(false)\n\n    const { TextArea } = Input\n\n    useEffect(() => {\n        getEC2Detail()\n        getS3Detail()\n    }, [])\n\n    const getEC2Detail = async () => {\n        try {\n            const response = await axios.get(`http://localhost:9000/api/ec2/filter/by-tag-value/${aws_tag_value}`);\n            setEC2(response.data);\n            console.log(response.data);\n\n        } catch (error) {\n            console.error(error);\n            setIsError(true);\n        }\n    }\n\n    const getS3Detail = async () => {\n        try {\n            const response = await axios.get(`http://localhost:9000/api/s3/filter/by-tag-value/${aws_tag_value}`)\n            setS3(response.data)\n            console.log(response.data)\n\n        } catch (error) {\n            console.error(error)\n            setIsError(true)\n        }\n    }\n\n    const tagColor = (dataIndex) => {\n        let color = ''\n        if (dataIndex === 'stopped') {\n            color = 'volcano'\n        } else if (dataIndex === 'running') {\n            color = 'green'\n        } else if (dataIndex === 'stopping' || dataIndex === 'shutting-down') {\n            color = 'warning'\n        } else if (dataIndex === 'rebooting') {\n            color = 'cyan'\n        }\n        return (\n            <Tag color={color} >{dataIndex.toUpperCase()}</Tag>\n        )\n    }\n\n    const renderError = () => {\n        if (isError === true) {\n            return (\n                <Error500 />\n            )\n        }\n    }\n\n    function callback(key) {\n        console.log(key)\n    }\n\n    const { TabPane } = Tabs\n\n    const ec2Columns = [\n        {\n            title: 'Owner',\n            dataIndex: ['Tags', 'Key'],\n            key: ''\n        },\n        {\n            title: 'Instance Type',\n            dataIndex: 'InstanceType',\n            key: ''\n        },\n        {\n            title: 'Instance State',\n            dataIndex: ['State', 'Name'],\n            render: (dataIndex) => (tagColor(dataIndex)),\n            key: ''\n\n        }\n    ]\n    const s3Columns = [\n        {\n            title: 'Owner',\n            dataIndex: ['Tags', 'Key'],\n            key: ''\n        },\n        {\n            title: 'Bucket Name',\n            dataIndex: 'Bucket',\n            key: ''\n        },\n\n    ]\n\n    return (\n        <div>\n            <PageHeader\n                className='site-page-header'\n                onBack={() => window.history.back()}\n                title='Title'\n            />\n            <Tabs defaultActiveKey='1' size='large' onChange={callback}>\n                <TabPane tab='Class Policy' key='1'>\n                    <Card id='policy-editor-card' title='Policy Editor'>\n                        Please Enter Policy in JSON Format\n                        <Tag color=\"warning\">AWS Account:  lapas</Tag>\n                        <Tag color=\"warning\">IAM Account:  CostExp</Tag>\n                        <Tooltip title='Notice! This Policy will Apply to Every IAM Account that under AWS Account you used' color='red' placement='bottomLeft'>\n                            <TextArea rows={20} />\n                        </Tooltip>\n                        <Button type='primary'>\n                            Apply\n                        </Button>\n                    </Card>\n                </TabPane>\n                <TabPane tab='EC2' key='2'>\n                    <Table columns={ec2Columns} dataSource={ec2} />\n                    {renderError()}\n                </TabPane>\n                <TabPane tab='S3' key='3'>\n                    <Table columns={s3Columns} dataSource={s3} />\n                    {renderError()}\n                </TabPane>\n                <TabPane tab='RDS' key='4'>\n                    Content of Tab Pane 3\n                    {renderError()}\n                </TabPane>\n            </Tabs>\n        </div >\n    )\n}\n\nexport default ProjectDetail",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":78,"column":32,"nodeType":"71","endLine":78,"endColumn":35},{"ruleId":"65","replacedBy":"72"},{"ruleId":"67","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":22,"column":8,"nodeType":"76","endLine":22,"endColumn":10,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":55,"column":19,"nodeType":"80","messageId":"81","endLine":55,"endColumn":27},{"ruleId":"78","severity":1,"message":"82","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":21},{"ruleId":"74","severity":1,"message":"83","line":24,"column":8,"nodeType":"76","endLine":24,"endColumn":36,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":118,"column":41,"nodeType":"87","messageId":"88","endLine":118,"endColumn":64},{"ruleId":"74","severity":1,"message":"89","line":20,"column":8,"nodeType":"76","endLine":20,"endColumn":10,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["91"],["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getEC2Detail', 'getS3Detail', and 'getVPCDetail'. Either include them or remove the dependency array.","ArrayExpression",["93"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'VictoryAxis' is defined but never used.","React Hook useEffect has a missing dependency: 'updateGraph'. Either include it or remove the dependency array.",["94"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has missing dependencies: 'getEC2Detail' and 'getS3Detail'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [getEC2Detail, getS3Detail, getVPCDetail]",{"range":"102","text":"103"},"Update the dependencies array to be: [date, granularity, service, updateGraph]",{"range":"104","text":"105"},"Update the dependencies array to be: [getEC2Detail, getS3Detail]",{"range":"106","text":"107"},[575,577],"[getEC2Detail, getS3Detail, getVPCDetail]",[809,837],"[date, granularity, service, updateGraph]",[553,555],"[getEC2Detail, getS3Detail]"]